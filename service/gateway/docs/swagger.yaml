basePath: /api/v1
definitions:
  handler.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      message:
        type: string
    type: object
  status.Comment:
    properties:
      avatar:
        type: string
      cid:
        type: integer
      content:
        type: string
      time:
        type: string
      uid:
        type: integer
      username:
        type: string
    type: object
  status.CommentListResponse:
    properties:
      commentlist:
        items:
          $ref: '#/definitions/status.Comment'
        type: array
      count:
        type: integer
    type: object
  status.CreateCommentRequest:
    properties:
      content:
        type: string
    type: object
  status.CreateRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  status.DeleteCommentRequest:
    properties:
      status_id:
        type: integer
      title:
        type: string
    type: object
  status.DeleteRequest:
    properties:
      title:
        type: string
    type: object
  status.GetResponse:
    properties:
      content:
        type: string
      sid:
        type: integer
      time:
        type: string
      title:
        type: string
      userid:
        type: integer
    type: object
  status.LikeRequest:
    properties:
      liked:
        type: boolean
    type: object
  status.ListResponse:
    properties:
      count:
        type: integer
      stauts:
        items:
          $ref: '#/definitions/status.Status'
        type: array
    type: object
  status.Status:
    properties:
      avatar:
        type: string
      comment_count:
        type: integer
      content:
        type: string
      id:
        type: integer
      like_count:
        type: integer
      liked:
        type: boolean
      time:
        type: string
      title:
        type: string
      username:
        type: string
    type: object
  status.UpdateRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  user.GetProfileRequest:
    properties:
      id:
        type: integer
    type: object
  user.ListRequest:
    properties:
      group:
        type: integer
      team:
        type: integer
    type: object
  user.ListResponse:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/user.User'
        type: array
    type: object
  user.LoginRequest:
    properties:
      oauth_code:
        type: string
    type: object
  user.LoginResponse:
    properties:
      redirect_url:
        type: string
      token:
        type: string
    type: object
  user.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  user.UpdateInfoRequest:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      nick:
        type: string
    type: object
  user.User:
    properties:
      avatar:
        type: string
      email:
        type: string
      group:
        type: integer
      id:
        type: integer
      name:
        type: string
      nick:
        type: string
      role:
        type: integer
      team:
        type: integer
    type: object
  user.UserProfile:
    properties:
      avatar:
        type: string
      email:
        type: string
      group:
        type: integer
      id:
        type: integer
      name:
        type: string
      nick:
        type: string
      role:
        type: integer
      team:
        type: integer
      tel:
        type: string
    type: object
host: work.text.muxi-tech.xyz
info:
  contact: {}
  description: The gateway of muxi-workbench
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: muxi-workbench-gateway
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login the workbench
      parameters:
      - description: login_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: login api
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: register user
      parameters:
      - description: register_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: register api
      tags:
      - auth
  /status:
    get:
      consumes:
      - application/json
      description: 拉取进度列表
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: last_id
        in: query
        name: last_id
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: group
        in: query
        name: group
        type: integer
      - description: uid
        in: query
        name: uid
        type: integer
      - description: team
        in: query
        name: team
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/status.ListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: list status api
      tags:
      - status
    post:
      consumes:
      - application/json
      description: 创建 status
      parameters:
      - description: create_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/status.CreateRequest'
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: create status api
      tags:
      - status
  /status/comment/{id}:
    delete:
      consumes:
      - application/json
      description: 通过 status_id 和 status_title 删除 status_comment
      parameters:
      - description: comment_id
        in: path
        name: id
        required: true
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: delete_comment_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/status.DeleteCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: delete comment api
      tags:
      - status
    post:
      consumes:
      - application/json
      description: 创建评论
      parameters:
      - description: status_id
        in: path
        name: id
        required: true
        type: integer
      - description: create_comment_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/status.CreateCommentRequest'
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: create comment api
      tags:
      - status
  /status/detail/{id}:
    delete:
      consumes:
      - application/json
      description: 通过 status_id 和 title 删除 status
      parameters:
      - description: status_id
        in: path
        name: id
        required: true
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: delete_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/status.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: delete status api
      tags:
      - status
    get:
      consumes:
      - application/json
      description: 获取进度实体
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: status_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/status.GetResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: get status api
      tags:
      - status
    put:
      consumes:
      - application/json
      description: 编辑进度
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: status_id
        in: path
        name: id
        required: true
        type: integer
      - description: update_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/status.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: update status api
      tags:
      - status
  /status/detail/{id}/comments:
    get:
      consumes:
      - application/json
      description: 通过 status_id 获取 comment_list
      parameters:
      - description: status_id
        in: path
        name: id
        required: true
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: last_id
        in: query
        name: last_id
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/status.CommentListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: get comments list api
      tags:
      - status
  /status/like/{id}:
    put:
      consumes:
      - application/json
      description: 给进度点赞
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: status_id
        in: path
        name: id
        required: true
        type: integer
      - description: like_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/status.LikeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: like status api
      tags:
      - status
  /user:
    put:
      consumes:
      - application/json
      description: 修改用户个人信息
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: update_info_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/user.UpdateInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: update info api
      tags:
      - user
  /user/list:
    get:
      consumes:
      - application/json
      description: 通过 group 和 team 获取 userlist
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: get_user_list_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/user.ListRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: get user_list api
      tags:
      - user
  /user/profile/{id}:
    get:
      consumes:
      - application/json
      description: 通过 userId 获取完整 user 信息
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: get_profile_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/user.GetProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserProfile'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: get user_profile api
      tags:
      - user
swagger: "2.0"
